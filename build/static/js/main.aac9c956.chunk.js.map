{"version":3,"sources":["config/config.js","actions/index.js","component/popupform.js","component/GoogleSearchPopup.js","component/main.js","component/toolbar.js","component/featuremodal.js","reducers/MainReducer.js","reducers/ApiReducer.js","reducers/index.js","component/sidebar.js","App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","databaseRef","ref","firestore","modalstate","doc","child","mstate","type","photostyle","display","width","height","backgroundColor","Button","styled","input","_templateObject","PFrame","div","_templateObject2","PopupForm","e","this","props","handleSubmit","fdata","preventDefault","_this","react_default","a","createElement","Popup","onSubmit","hhandleSubmit","name","placeholder","value","onChange","handleName","address","handleAddress","htmlFor","className","style","fileInput","handlePhoto","id","remark","handleRemark","onClick","Component","connect","state","LayerId","ulstate","position","Math","round","lat","lng","sfdata","dispatch","target","handleCoordinate","coordinate","photo","data","button","GoogleSearchPopup_templateObject","GoogleSearchPopup_templateObject2","GooglePopupForm","GoogleSearchPopup_PFrame","GoogleSearchMarker","formatted_address","GoogleSearchPopup_Button","GoogleMarkerToLayer","marker","Main","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_onCreated","layerType","layer","bounds","getBounds","console","log","DispatchAddMarker","DispatchAddCircle","DispatchAddPolyline","DispatchAddPolygon","DispatchAddRectangle","_onEditPath","zoom","getMapZoom","EditFeature","layers","_onDeleted","DeleteFeature","bluemarble","dragging","L","Control","fileLayerLoad","geoJson","layerOptions","color","addToMap","fileSizeLimit","formats","addTo","map","leafletElement","getZoom","status","Marker","GoogleSearchPosition","opacity","GoogleSearchPopup","boolean","esm","onEdited","onCreated","onDeleted","draw","rectangle","circlemarker","TileLayer","attribution","url","react_leaflet_google","googlekey","maptype","lib_default","tilematrixSet","format","transparent","_this2","centerposition","Map","center","zoomControl","zIndex","cursor","mapcursor","onmoveend","getmoveend","LayerSwitch","FeatureGroup","getFeatureID","_leaflet_id","onlayeradd","layeradd","popupform","ToolStateSwitch","toolsta","keys","MarkersPosition","idx","key","GoogleSearchStatus","inputText","functiontype","path","set","_latlng","then","catch","error","removeLi","ID","SearchBar","toolbar_templateObject","ToolBarOutline","toolbar_templateObject2","ToolBarMaterial","_templateObject3","LayerList","ToolBar","text","Geocode","setApiKey","enableDebug","fromAddress","response","results","Geo","event","AupdateInputText","geoFirist","AhandleChange","handleChange","todo","index","toolstate","updateInputText","onKeyPress","cursortype","sboolean","mboolean","Featuremodal","Fragment","Modal","show","mmodalstate","onHide","Header","closeButton","Title","Body","Form","Group","controlId","Text","Label","Footer","esm_Button","variant","initState","OpenOrClose","promiseaddress","clickFeatureID","MainR","arguments","length","undefined","action","objectSpread","geometry","location","idd","produce","draftState","deltaA","_lastCenter","_animateToZoom","layertype","coor","MarkernewLayer","_latlngs","rectangleid","rectanglenewLayer","rectanglebounds","_bounds","xposition","_northEast","_southWest","yposition","Polygonid","PolygonnewLayer","polygonbounds","xxposition","yyposition","Polylineid","PolylinenewLayer","LineBounds","linex","liney","CirclenewLayer","Feature","_layers","editlayer","Bounds","x","y","DFeature","i","apiR","allReducers","reduceReducers","sidebar_templateObject","Ful","ul","sidebar_templateObject2","SlideFromLtoR","keyframes","sidebar_templateObject3","SlideFromRtoL","_templateObject4","Sbar","_templateObject5","clickstate","SideBar","onclick","setState","sidebar_Button","record","pointer","ulonclick","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","getState","App","es","toolbar","sidebar","featuremodal","main","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4VAaAA,gBAXuB,CACrBC,OAAQ,0CACRC,WAAY,2CACZC,YAAa,kDACbC,UAAW,2BACXC,cAAe,GACfC,kBAAmB,eACnBC,MAAO,sCACPC,cAAe,iBAIjB,IAAMC,EAAcT,aAAoBU,MAC3BC,EAAYX,cCsMZY,GDrMSD,EAAUE,IAAI,eACXJ,EAAYK,MAAM,iBCoMjB,SAAAC,GACtB,MAAM,CACFC,KAAM,aACND,0QCnNR,IAAME,EAAa,CACfC,QAAS,eACTC,MAAO,OACPC,OAAQ,OACRC,gBAAiB,WAEfC,EAASC,IAAOC,MAAVC,KAINC,EAASH,IAAOI,IAAVC,KAQNC,wLAESC,GAGXC,KAAKC,MAAMC,aAAaF,KAAKC,MAAME,OACnCJ,EAAEK,kDAQO,IAAAC,EAAAL,KAEL,OACIM,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAEIH,EAAAC,EAAAC,cAACb,EAAD,KACAW,EAAAC,EAAAC,cAAA,QAAME,SAAU,SAAAX,GAAC,OAAEM,EAAKM,cAAcZ,KAClCO,EAAAC,EAAAC,cAAA,aAEIF,EAAAC,EAAAC,cAAA,SACAI,KAAK,OACL3B,KAAK,OACL4B,YAAY,6CACZC,MAAOd,KAAKC,MAAME,MAAMS,KACxBG,SAAUf,KAAKC,MAAMe,cAGzBV,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,aAEIF,EAAAC,EAAAC,cAAA,SACAI,KAAK,UACL3B,KAAK,OACL4B,YAAY,iCACZC,MAAOd,KAAKC,MAAME,MAAMc,SAAS,GACjCF,SAAUf,KAAKC,MAAMiB,iBAGzBZ,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,SAAOW,QAAQ,QAAOb,EAAAC,EAAAC,cAAA,QAAMY,UAAU,uBAAuBC,MAASnC,GAAhD,MAGpBoB,EAAAC,EAAAC,cAAA,SACEY,UAAW,YACXR,KAAK,QACL3B,KAAK,OACLN,IAAK,SAAAc,GACHY,EAAKiB,UAAY7B,GAEnBsB,SAAUf,KAAKC,MAAMsB,YACrBC,GAAG,OACHH,MAAO,CAAClC,QAAS,UAGrBmB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,6BAEIF,EAAAC,EAAAC,cAAA,SACII,KAAK,SACL3B,KAAK,OACL6B,MAAOd,KAAKC,MAAME,MAAMsB,OACxBV,SAAUf,KAAKC,MAAMyB,gBAG7BpB,EAAAC,EAAAC,cAACjB,EAAD,CAAQN,KAAK,SAAS6B,MAAM,SAASa,QAAU,SAAA5B,GAAC,OAAEM,EAAKM,cAAcZ,gBArEjE6B,aAgHTC,cAlCS,SAAAC,GACpB,MAAO,CACH3B,MAAO2B,EAAM3B,MACb4B,QAASD,EAAMC,QACfC,QAASF,EAAME,QACfC,SAAS,CAACC,KAAKC,MAAgB,IAAVL,EAAMM,KAAW,IAAMF,KAAKC,MAAgB,IAAVL,EAAMO,KAAW,KACxEC,OAAQR,EAAMQ,SAIK,SAAAC,GACvB,MAAO,CACHvB,WAAY,SAAAjB,GACRwC,EDzFF,CACFtD,KAAK,aACL2B,KCuFwBb,EAAEyC,OAAO1B,SAEjCI,cAAe,SAAAnB,GACXwC,EDrFF,CACFtD,KAAK,gBACLgC,QCmF2BlB,EAAEyC,OAAO1B,SAEpC2B,iBAAkB,SAAA1C,GACdwC,EDjFF,CACFtD,KAAK,mBACLyD,WC+E8B3C,EAAEyC,OAAO1B,SAEvCS,YAAa,SAAAxB,GACTwC,ED7EF,CACFtD,KAAK,cACL0D,MC2EyB5C,EAAEyC,OAAO1B,SAElCY,aAAc,SAAA3B,GACVwC,EDzEF,CACFtD,KAAK,eACLwC,OCuE0B1B,EAAEyC,OAAO1B,SAEnCZ,aAAc,SAAA0C,GACVL,EDrEF,CACFtD,KAAK,eACLkB,MCmE0ByC,OAMnBf,CAA6C/B,gPCjI5D,IAAMP,EAASC,IAAOqD,OAAVC,KAKNnD,EAASH,IAAOI,IAAVmD,KAQNC,mLAOO,IAAA3C,EAAAL,KAEL,OACIM,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAEIH,EAAAC,EAAAC,cAACyC,EAAD,KAEI3C,EAAAC,EAAAC,cAAA,YAAOR,KAAKC,MAAMiD,mBAAmBpC,MAAMqC,mBAI3C7C,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,YACKR,KAAKC,MAAMiD,mBAAmBjB,UAGnC3B,EAAAC,EAAAC,cAAC4C,EAAD,CAAQnE,KAAK,SAAU0C,QAAU,SAAA5B,GAAC,OAAEM,EAAKJ,MAAMoD,oBAAoBtD,KAAnE,qCAxBU6B,aAqDfC,cApBS,SAAAC,GACpB,MAAO,CACH3B,MAAO2B,EAAM3B,MACb4B,QAASD,EAAMC,QACfC,QAASF,EAAME,QACfC,SAAS,CAACC,KAAKC,MAAgB,IAAVL,EAAMM,KAAW,IAAMF,KAAKC,MAAgB,IAAVL,EAAMO,KAAW,KACxEa,mBAAmBpB,EAAMoB,qBAIN,SAAAX,GACvB,MAAO,CAEHc,oBAAqB,SAAAC,GACjBf,EFgGuB,SAACe,GAChC,MAAM,CACFrE,KAAM,sBACNqE,UEnGaD,CAAoBC,OAM1BzB,CAA6CmB,qCCnDtDO,cACF,SAAAA,IAAc,IAAAlD,EAAA,OAAAmD,OAAAC,EAAA,EAAAD,CAAAxD,KAAAuD,IACZlD,EAAAmD,OAAAE,EAAA,EAAAF,CAAAxD,KAAAwD,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAA5D,QAkHF6D,WAAa,SAAC9D,GACZ,IAAId,EAAOc,EAAE+D,UACTC,EAAQhE,EAAEgE,MACVC,EAAS3D,EAAK4D,YAClBC,QAAQC,IAAIpE,EAAEgE,OACD,WAAT9E,GAEFoB,EAAKJ,MAAMmE,kBAAkBL,GAC7BG,QAAQC,IAAI,6BAA8B9D,EAAKJ,MAAMqC,SAEtC,WAATrD,GACNoB,EAAKJ,MAAMoE,kBAAkBN,GAE7BG,QAAQC,IAAI,6BAA8B9D,EAAKJ,MAAMqC,SACrC,aAATrD,GACPoB,EAAKJ,MAAMqE,oBAAoBP,EAAMC,GACrCE,QAAQC,IAAI,+BAAgC9D,EAAKJ,MAAMqC,SACvC,YAATrD,GACPoB,EAAKJ,MAAMsE,mBAAmBR,EAAMC,GACpCE,QAAQC,IAAI,8BAA+B9D,EAAKJ,MAAMqC,SACtC,cAATrD,IACPoB,EAAKJ,MAAMuE,qBAAqBT,EAAMC,GACtCE,QAAQC,IAAI,gCAAiC9D,EAAKJ,MAAMqC,UAzI9CjC,EA+IdoE,YAAa,SAAC1E,GACZmE,QAAQC,IAAIpE,GACZ,IAAI2E,EAAOrE,EAAKsE,aAChBtE,EAAKJ,MAAM2E,YAAY7E,EAAE8E,OAAOH,GAEhCR,QAAQC,IAAI9D,EAAKJ,MAAMqC,SApJXjC,EAsJdyE,WAAY,SAAC/E,GACXmE,QAAQC,IAAIpE,GAEZM,EAAKJ,MAAM8E,cAAchF,EAAE8E,QAC3BX,QAAQC,IAAI9D,EAAKJ,MAAMqC,SAxJvBjC,EAAKyB,MAAM,CACTkD,YAAY,GAHF3E,wEASJN,GAER,IAAI2E,EAAO1E,KAAK2E,aACb5E,EAAEgE,MAAMkB,UAETjF,KAAKC,MAAMmE,kBAAkBrE,EAAEgE,MAAMW,uCAMrCQ,IAAEC,QAAQC,cAAc,CAKtBrB,MAAOmB,IAAEG,QAETC,aAAc,CAACjE,MAAO,CAACkE,MAAM,QAE7BC,UAAU,EAEVC,cAAe,KAEfC,QAAS,CACL,WACA,OACA,UAELC,MAAM3F,KAAK4F,0CAKd,OAAO5F,KAAK4F,KAAO5F,KAAK4F,IAAIC,eAAeC,8CAI3C,MAAiC,kBAAvB9F,KAAKC,MAAM+D,OACZhE,KAAKC,MAAM+D,OAEbhE,KAAK4F,KAAO5F,KAAK4F,IAAIC,eAAe5B,uDAIzB8B,GAElB,GAAa,MAAVA,EACD,OACEzF,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAQ/D,SAAUjC,KAAKC,MAAMgG,qBAAsBC,QAAW,GAC5D5F,EAAAC,EAAAC,cAAC2F,EAAD,+CAKQC,GAEd,IAAe,IAAZA,EACD,OAEI9F,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CACIpE,SAAS,WACTqE,SAAUtG,KAAKyE,YACf8B,UAAWvG,KAAK6D,WAChB2C,UAAWxG,KAAK8E,WAChB2B,KAAM,CACJC,WAAW,EACXC,cAAc,yCAShB5E,GAEV,OAAc,GAAVA,EAEKzB,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CACHC,YAAY,0EACZC,IAAI,uDAIQ,GAAV/E,EAGJzB,EAAAC,EAAAC,cAACuG,EAAA,YAAD,CAAaC,UAxGX,0CAwG4BC,QAAQ,WAGxB,GAAVlF,EAGJzB,EAAAC,EAAAC,cAAC0G,EAAA3G,EAAD,CACQuG,IAAI,gCACJ/C,MAAO,OACPoD,cAAc,YACdC,OAAO,aACPC,aAAa,EACbnB,QAAS,SAThB,mCAuDE,IAAAoB,EAAAtH,KACHuH,EAAiB,CAACvH,KAAKC,MAAMmC,IAAKpC,KAAKC,MAAMoC,KAGjD,OAEE/B,EAAAC,EAAAC,cAACgH,EAAA,EAAD,CAAKC,OAAQF,EACR7C,KAAM1E,KAAKC,MAAMyE,KACjBgD,aAAe,EACfrG,MAAO,CAACsG,OAAO,EAAEC,OAAQ5H,KAAKC,MAAM4H,WACpClJ,IAAK,SAACA,GAAU2I,EAAK1B,IAAMjH,GAE3BqF,OAAShE,KAAKiE,YACd6D,UAAW,SAAA/H,GAAC,OAAEuH,EAAKrH,MAAM8H,WAAWhI,KAItCC,KAAKgI,YAAYhI,KAAKC,MAAM8B,SAC7BzB,EAAAC,EAAAC,cAACyH,EAAA,EAAD,CAAetG,QAAU,SAAC5B,GAAD,OAAKuH,EAAKrH,MAAMiI,aAAanI,EAAEgE,MAAMoE,cAAcC,WAAa,SAACrI,GAAD,OAAKuH,EAAKe,SAAStI,KAC1GO,EAAAC,EAAAC,cAAC8H,EAAD,MACCtI,KAAKuI,gBAAgBvI,KAAKC,MAAMuI,SAChChF,OAAOiF,KAAKzI,KAAKC,MAAMyI,iBAAiB9C,IAAI,SAACpE,EAAGmH,GAG/C,OACArI,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAQ4C,IAAMpH,EAAIS,SAAUqF,EAAKrH,MAAMyI,gBAAgBlH,GAAK0E,QAAW,GAAKvE,QAAS,SAAC5B,GAAD,OAAKmE,QAAQC,IAAIpE,KACpGO,EAAAC,EAAAC,cAAC8H,EAAD,UAMLtI,KAAKkD,mBAAmBlD,KAAKC,MAAM4I,4BA7L3BjH,aA8PJC,cAzDS,SAAAC,GAClB,MAAO,CACHgH,UAAWhH,EAAMgH,UACjB/G,QAASD,EAAMC,QACfK,IAAKN,EAAMM,IACXC,IAAKP,EAAMO,IACXqC,KAAM5C,EAAM4C,KACZV,OAAQlC,EAAMkC,OACd0E,gBAAiB5G,EAAM4G,gBACvBb,UAAW/F,EAAM+F,UACjBkB,aAAcjH,EAAMiH,aACpBP,QAAS1G,EAAM0G,QACfK,mBAAoB/G,EAAMoB,mBAAmB6C,OAC7CE,qBAAsBnE,EAAMoB,mBAAmBjB,SAC/CK,OAAQR,EAAMQ,SAMG,SAAAC,GACzB,MAAO,CACL6B,kBAAmB,SAACL,GAClBxB,EH/H2B,SAACwB,GAC9BG,QAAQC,IAAIJ,GAEZ,IAAIiF,EAAO,UAAUjF,EAAMoE,YAO3B,OALAvJ,EAAUE,IAAIkK,GAAMC,IAAI,CAACvG,WAAW,CAACqB,EAAMmF,QAAQ7G,IAAI0B,EAAMmF,QAAQ9G,KAAKnD,KAAK,WAAWkK,KAAK,WAC3FjF,QAAQC,IAAI,UACbiF,MAAM,SAAAC,GACLnF,QAAQC,IAAIkF,KAEV,CACFpK,KAAM,oBACN8E,SGmHOK,CAAkBL,KAE7BM,kBAAmB,SAACN,GAClBxB,EHlH2B,SAACwB,GAC9B,MAAM,CACF9E,KAAM,oBACN8E,SG+GOM,CAAkBN,KAE7BS,qBAAsB,SAACT,EAAMW,GAC3BnC,EH7G8B,SAACwB,EAAMW,GACvC,MAAM,CACFzF,KAAM,uBACN8E,QACAW,QGyGOF,CAAqBT,EAAMW,KAEtCH,mBAAoB,SAACR,EAAMW,GACzBnC,EHhG4B,SAACwB,EAAMW,GACrC,MAAM,CACFzF,KAAM,qBACN8E,QACAW,QG4FOH,CAAmBR,EAAMW,KAEpCJ,oBAAqB,SAACP,EAAMW,GAC1BnC,EH3G6B,SAACwB,EAAMW,GACtC,MAAM,CACFzF,KAAM,sBACN8E,QACAW,QGuGOJ,CAAoBP,EAAMW,KAErC4E,SAAU,SAAAvF,GACRxB,EHnKkB,SAACwB,GACrB,MAAM,CACF9E,KAAM,WACN8E,SGgKOuF,CAASvF,KAEpBa,YAAa,SAACb,EAAMW,GAClBnC,EHzFqB,SAACwB,EAAMW,GAC9B,MAAM,CACFzF,KAAM,cACN8E,QACAW,QGqFOE,CAAYb,EAAMW,KAE7BK,cAAe,SAAChB,GACdxB,EHlFuB,SAACwB,EAAMW,GAChC,MAAM,CACFzF,KAAM,gBACN8E,QACAW,QG8EOK,CAAchB,KAEzBmE,aAAc,SAACqB,GACbhH,EH7EI,CACFtD,KAAM,eACNuC,GG2EoB+H,KAExBxB,WAAW,SAAChI,GACVwC,EH5LoB,SAAAxC,GACtB,MAAM,CACFd,KAAK,aACLc,KGyLOgI,CAAWhI,OAOX8B,CAA6C0B,qxBC7Q5D,IAAMiG,EAAYhK,IAAOI,IAAV6J,KAYTC,EAAiBlK,IAAOI,IAAV+J,KAYdC,EAAkBpK,IAAOI,IAAViK,KAsBfC,EAAY,CACd,CAAEtI,GAAG,EAAGZ,KAAK,MAAOkG,IAAI,IACxB,CAAEtF,GAAG,EAAGZ,KAAK,SAAUkG,IAAI,IAC3B,CAAEtF,GAAG,EAAGZ,KAAK,SAAUkG,IAAI,KAOzBiD,qLAEQC,GAAM,IAAA3J,EAAAL,KAChBiK,IAAQC,UAPA,2CASRD,IAAQE,cAERF,IAAQG,YAAYJ,GAAMb,KACtB,SAAAkB,GAEI,IAAMpJ,EAAUoJ,EAASC,QAAQ,GACjCpG,QAAQC,IAAIlD,GACZZ,EAAKJ,MAAMsK,IAAItJ,IAInB,SAAAoI,GACEnF,QAAQmF,MAAMA,6CAIJmB,GACZ,IAAIR,EAAOQ,EAAMhI,OAAO1B,MACxBd,KAAKC,MAAMwK,iBAAiBT,GAEX,UAAdQ,EAAM5B,KAEL5I,KAAK0K,UAAUV,wCAKVQ,GACX,IAAIhJ,EAAKgJ,EAAMhI,OAAO1B,MACtBd,KAAKC,MAAM0K,cAAcnJ,oCAIlB,IAAA8F,EAAAtH,KAEL,OACIM,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACkJ,EAAD,KACIpJ,EAAAC,EAAAC,cAAA,UAASM,MAAOd,KAAKC,MAAM8B,QAAShB,SAAU,SAACyJ,GAAD,OAAWlD,EAAKsD,aAAaJ,KAC1EV,EAAUlE,IAAI,SAACiF,EAAMC,GACd,OACIxK,EAAAC,EAAAC,cAAA,UAAQoI,IAAKiC,EAAKrJ,GAClBV,MAAO+J,EAAKrJ,IAAKqJ,EAAKjK,SAOlCN,EAAAC,EAAAC,cAACoJ,EAAD,KAEItJ,EAAAC,EAAAC,cAAA,QAAMY,UAAU,QAAQO,QAAS,SAAA5B,GAAC,OAAIuH,EAAKrH,MAAM8K,UAAUzD,EAAKrH,MAAMuI,WAAtE,WACAlI,EAAAC,EAAAC,cAAA,QAAMY,UAAU,aAAaO,QAAS3B,KAAKC,MAAMpB,YAAjD,iBAEJyB,EAAAC,EAAAC,cAACgJ,EAAD,KACIlJ,EAAAC,EAAAC,cAAA,SAAOO,SAAU,SAACyJ,GAAD,OAAWlD,EAAK0D,gBAAgBR,IAC7C1J,MAASd,KAAKC,MAAM6I,UACpB7J,KAAK,OACL4B,YAAY,iCACZoK,WAAY,SAACT,GAAD,OAAWlD,EAAK0D,gBAAgBR,gBAhE9C5I,aA2GPC,eAhCS,SAAAC,GACpB,MAAO,CACHgH,UAAWhH,EAAMgH,UACjB/G,QAASD,EAAMC,QACfyG,QAAS1G,EAAM0G,UAKI,SAAAjG,GACvB,MAAO,CACHgI,IAAK,SAAAzB,GACDvG,EJlJO,SAACuG,GAChB,MAAM,CACF7J,KAAK,MACL6J,aI+IayB,CAAIzB,KAEjB2B,iBAAkB,SAAA3B,GACdvG,EJvIkB,SAACuG,GAC3B,MAAM,CACF7J,KAAK,mBACL6J,aIoIa2B,CAAiB3B,KAE9B6B,cAAe,SAAAnJ,GACXe,EJ/IF,CACFtD,KAAK,gBACL8C,QI6I2BP,KAE3BqG,UAAW,SAAAqD,GACP3I,EJ1Da,SAAC2I,GACtB,MAAM,CACFjM,KAAM,YACNiM,cIuDarD,CAAUqD,KAEvBH,UAAW,SAAAI,GACP5I,EJrDF,CACFtD,KAAM,YACN8L,UImDuBI,KAEvBtM,WAAY,SAAAuM,GACR7I,EAAS1D,EAAWuM,OAKjBvJ,CAA6CkI,+BClKtDsB,eACF,SAAAA,IAAe,OAAA7H,OAAAC,EAAA,EAAAD,CAAAxD,KAAAqL,GAAA7H,OAAAE,EAAA,EAAAF,CAAAxD,KAAAwD,OAAAG,EAAA,EAAAH,CAAA6H,GAAAzH,KAAA5D,6EAKX,OACIM,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+K,SAAA,KACIhL,EAAAC,EAAAC,cAAC+K,GAAA,EAAD,CAAOC,KAAQxL,KAAKC,MAAMwL,YAAaC,OAAU1L,KAAKC,MAAMpB,YAEtDyB,EAAAC,EAAAC,cAAC+K,GAAA,EAAMI,OAAP,CAAcC,aAAW,GACvBtL,EAAAC,EAAAC,cAAC+K,GAAA,EAAMM,MAAP,kCAGFvL,EAAAC,EAAAC,cAAC+K,GAAA,EAAMO,KAAP,KACAxL,EAAAC,EAAAC,cAACuL,GAAA,EAAD,KAEEzL,EAAAC,EAAAC,cAACuL,GAAA,EAAKC,MAAN,CAAYC,UAAU,kBACpB3L,EAAAC,EAAAC,cAACuL,GAAA,EAAKG,KAAN,CAAW9K,UAAU,cAArB,6CAGAd,EAAAC,EAAAC,cAACuL,GAAA,EAAKI,MAAN,MACA7L,EAAAC,EAAAC,cAACuL,GAAA,EAAK5G,QAAN,CAAclG,KAAK,OAAO4B,YAAY,2BAM1CP,EAAAC,EAAAC,cAAC+K,GAAA,EAAMa,OAAP,KACE9L,EAAAC,EAAAC,cAAC6L,GAAA,EAAD,CAAQC,QAAQ,YAAY3K,QAAS3B,KAAKC,MAAMpB,YAAhD,kBACAyB,EAAAC,EAAAC,cAAC6L,GAAA,EAAD,CAAQC,QAAQ,WAAhB,4BA9BG1K,aAwDZC,eAfS,SAAAC,GACpB,MAAO,CACH2J,YAAa3J,EAAMjD,aAKA,SAAA0D,GACvB,MAAO,CACH1D,WAAY,SAAAuM,GACR7I,EAAS1D,EAAWuM,OAKjBvJ,CAA6CwJ,yCC7DtDkB,GAAY,CACdvK,QAAU,CACNwK,YAAa,IAEjB3N,YAAY,EACZqE,mBAAmB,CAACjB,SAAS,CAAC,EAAE,GAAG8D,OAAO,GAAGjF,MAAM,IACnDsB,IAAK,WACLC,IAAK,YACLqG,gBAAgB,GAChBhE,KAAM,GACNV,OAAO,GACPjC,QAAU,EACV+G,UAAU,GACVuB,SAAU,GACV/H,OAAO,GACPmK,eAAe,GACftM,MAAM,CACJ4D,MAAM,GACNvC,GAAG,EACHZ,KAAK,GACLK,QAAQ,GACRyB,WAAW,GACXC,MAAM,GACNlB,OAAO,IAGToG,UAAU,GACVkB,aAAa,GACbP,SAAS,EACTkE,eAAgB,IAqWLC,GAlWD,WAA8B,IAA7B7K,EAA6B8K,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAArBL,GAAWQ,EAAUH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC5C,OAAQC,EAAO9N,MACX,IAAK,MAED,OAAOuE,OAAAwJ,GAAA,EAAAxJ,CAAA,GACA1B,EADP,CACcgH,UAAU,GACpB1G,IAAK2K,EAAOjE,UAAUmE,SAASC,SAAS9K,IACxCC,IAAK0K,EAAOjE,UAAUmE,SAASC,SAAS7K,IACxCqC,KAAM,GACN2F,SAAU0C,EAAOjE,UACjB3I,MAAMqD,OAAAwJ,GAAA,EAAAxJ,CAAA,GAAK1B,EAAM3B,MAAZ,CAAmBuC,WAAY,CAACqK,EAAOjE,UAAUmE,SAASC,SAAS9K,IAAI2K,EAAOjE,UAAUmE,SAASC,SAAS7K,OAC/Ga,mBAAmBM,OAAAwJ,GAAA,EAAAxJ,CAAA,GAAI1B,EAAMoB,mBAAX,CAA8BpC,MAAMiM,EAAOjE,UAAU7G,SAAS,CAAC8K,EAAOjE,UAAUmE,SAASC,SAAS9K,IAAI2K,EAAOjE,UAAUmE,SAASC,SAAS7K,KAAM0D,OAAO,SAKhL,IAAK,mBACD,OAAAvC,OAAAwJ,GAAA,EAAAxJ,CAAA,GACO1B,EADP,CACagH,UAAYiE,EAAOjE,YAEpC,IAAK,gBAED,OAAAtF,OAAAwJ,GAAA,EAAAxJ,CAAA,GACO1B,EADP,CACeC,QAASgL,EAAOhL,UAGnC,IAAK,aAED,OAAAyB,OAAAwJ,GAAA,EAAAxJ,CAAA,GACO1B,EADP,CACe3B,MAAMqD,OAAAwJ,GAAA,EAAAxJ,CAAA,GAAK1B,EAAM3B,MAAZ,CAAmBS,KAAMmM,EAAOnM,SAGxD,IAAK,gBAED,OAAA4C,OAAAwJ,GAAA,EAAAxJ,CAAA,GACO1B,EADP,CACe3B,MAAMqD,OAAAwJ,GAAA,EAAAxJ,CAAA,GAAK1B,EAAM3B,MAAZ,CAAmBc,QAAS8L,EAAO9L,YAG3D,IAAK,mBAED,OAAAuC,OAAAwJ,GAAA,EAAAxJ,CAAA,GACO1B,EADP,CACe3B,MAAMqD,OAAAwJ,GAAA,EAAAxJ,CAAA,GAAK1B,EAAM3B,MAAZ,CAAmBuC,WAAY,CAACZ,EAAMM,IAAIN,EAAMO,SAGxE,IAAK,cAED,OAAAmB,OAAAwJ,GAAA,EAAAxJ,CAAA,GACO1B,EADP,CACe3B,MAAMqD,OAAAwJ,GAAA,EAAAxJ,CAAA,GAAK1B,EAAM3B,MAAZ,CAAmBwC,MAAOoK,EAAOpK,UAGzD,IAAK,eAED,OAAAa,OAAAwJ,GAAA,EAAAxJ,CAAA,GACO1B,EADP,CACe3B,MAAMqD,OAAAwJ,GAAA,EAAAxJ,CAAA,GAAK1B,EAAM3B,MAAZ,CAAmBsB,OAAQsL,EAAOtL,WAG1D,IAAK,eAGD,IAAI0L,EAAMrL,EAAM4K,eAWhB,OARoBU,aAAQtL,EAAM,SAAAuL,GAC9BA,EAAW/K,OAAO6K,GAAKvM,KAAOmM,EAAO5M,MAAMS,KAC3CyM,EAAW/K,OAAO6K,GAAKlM,QAAU8L,EAAO5M,MAAMc,QAC9CoM,EAAW/K,OAAO6K,GAAKxK,MAAQoK,EAAO5M,MAAMwC,MAC5C0K,EAAW/K,OAAO6K,GAAK1L,OAASsL,EAAO5M,MAAMsB,SAKrD,IAAK,eAWD,OAVAyC,QAAQC,IAAIrC,EAAM3B,MAAM2B,EAAMQ,QACL8K,aAAQtL,EAAM,SAAAuL,GAEnCA,EAAWlN,MAAMS,KAAO,GACxByM,EAAWlN,MAAMc,QAAUa,EAAMQ,OAAOyK,EAAOvL,IAAIP,QACnDoM,EAAWlN,MAAMwC,MAAQ,GACzB0K,EAAWlN,MAAMsB,OAAS,GAE1B4L,EAAWX,eAAgBK,EAAOvL,KAG1C,IAAM,YAEF,IAAI8L,EAASxL,EAAME,QAAQwK,YAI3B,OAFAc,EAAOP,EAAOvL,KAAOM,EAAME,QAAQwK,YAAYO,EAAOvL,IAEtDgC,OAAAwJ,GAAA,EAAAxJ,CAAA,GACO1B,EADP,CAEIE,QAAQwB,OAAAwJ,GAAA,EAAAxJ,CAAA,GAAK1B,EAAME,QAAZ,CAAoBwK,YAAYc,MAM/C,IAAK,aAUD,OAPmBF,aAAQtL,EAAO,SAAAuL,GACzBN,EAAOhN,EAAEyC,OAAO+K,cACrBF,EAAW3I,KAAOqI,EAAOhN,EAAEyC,OAAOgL,eAClCH,EAAWjL,IAAM2K,EAAOhN,EAAEyC,OAAO+K,YAAYnL,IAC7CiL,EAAWhL,IAAM0K,EAAOhN,EAAEyC,OAAO+K,YAAYlL,OAIrD,IAAM,UAoBF,OAlBoB+K,aAAQtL,EAAO,SAAAuL,GAE/BA,EAAWjL,IAAM2K,EAAOnK,KAAKF,WAAW,GACxC2K,EAAWhL,IAAM0K,EAAOnK,KAAKF,WAAW,GACX,WAA1BqK,EAAOnK,KAAK6K,UACXJ,EAAW3I,KAAOqI,EAAOnK,KAAK8B,KACC,WAA1BqI,EAAOnK,KAAK6K,UACjBJ,EAAW3I,KAAOqI,EAAOnK,KAAK8B,KACC,YAA1BqI,EAAOnK,KAAK6K,UACjBJ,EAAWrJ,OAAS+I,EAAOnK,KAAKoB,OACD,aAA1B+I,EAAOnK,KAAK6K,UACjBJ,EAAWrJ,OAAS+I,EAAOnK,KAAKoB,OACD,cAA1B+I,EAAOnK,KAAK6K,YACjBJ,EAAWrJ,OAAS+I,EAAOnK,KAAKoB,UAM5C,IAAK,sBACD,IAAI0J,EAAO5L,EAAMoB,mBAAmBjB,SACpC,OAAAuB,OAAAwJ,GAAA,EAAAxJ,CAAA,GACO1B,EADP,CAEI4G,gBAAgBlF,OAAAwJ,GAAA,EAAAxJ,CAAA,GAAI1B,EAAM4G,gBAAX,CAA2BgF,SAC1CxK,mBAAmBM,OAAAwJ,GAAA,EAAAxJ,CAAA,GAAI1B,EAAMoB,mBAAX,CAA+BjB,SAAS,CAAC,EAAE,GAAI8D,OAAO,GAAIjF,MAAM,OAG1F,IAAK,WAED,OAAO0C,OAAAwJ,GAAA,EAAAxJ,CAAA,GACA1B,EADP,CAEI4G,gBAAiB,KAGzB,IAAK,YAED,OADAxE,QAAQC,IAAI4I,EAAO7B,YACnB1H,OAAAwJ,GAAA,EAAAxJ,CAAA,GACO1B,EADP,CAEI+F,UAAWkF,EAAO7B,WAAW,GAC7BnC,aAAagE,EAAO7B,WAAW,KAGvC,IAAK,YAED,OAAA1H,OAAAwJ,GAAA,EAAAxJ,CAAA,GACO1B,EADP,CAEI0G,SAAUuE,EAAOhC,YAGzB,IAAK,oBAED,IACI4C,EAAe,GAenB,OAbAA,EAHeZ,EAAOhJ,MAAMoE,aAGF,CACtBpE,MAAMgJ,EAAOhJ,MACb0J,UAAU,SACV7M,KAAK,2BACLK,QAAQ,GACR0B,MAAM,GACNlB,OAAO,GACPiB,WAAY,CAACqK,EAAOhJ,MAAMmF,QAAQ9G,IAAI2K,EAAOhJ,MAAMmF,QAAQ7G,KAC3Db,GAAGuL,EAAOhJ,MAAMoE,YAChBzD,KAAM,IAIHlB,OAAAwJ,GAAA,EAAAxJ,CAAA,GACA1B,EADP,CAEIM,IAAK2K,EAAOhJ,MAAMmF,QAAQ9G,IAC1BC,IAAK0K,EAAOhJ,MAAMmF,QAAQ7G,IAC1BqC,KAAM,GACNpC,OAAOkB,OAAAwJ,GAAA,EAAAxJ,CAAA,GAAK1B,EAAMQ,OAAWqL,KAGrC,IAAK,uBACDzJ,QAAQC,IAAI4I,EAAOhJ,MAAM6J,SAAS,IAClC,IAAIC,EAAcd,EAAOhJ,MAAMoE,YAC3B2F,EAAkB,GAClBC,EAAkBhB,EAAOhJ,MAAMiK,QAC/BC,GAAaF,EAAgBG,WAAW9L,IAAI2L,EAAgBI,WAAW/L,KAAK,EAC5EgM,GAAaL,EAAgBG,WAAW7L,IAAI0L,EAAgBI,WAAW9L,KAAK,EAehF,OAZAyL,EAAkBD,GAAc,CAC5B9J,MAAMgJ,EAAOhJ,MACb0J,UAAU,YACV7M,KAAK,2BACLK,QAAQ,GACR0B,MAAM,GACNlB,OAAO,GACPiB,WAAY,CAACuL,EAAUG,GACvB5M,GAAGuL,EAAOhJ,MAAMoE,YAChBnE,OAAQ+J,GAGLvK,OAAAwJ,GAAA,EAAAxJ,CAAA,GACA1B,EADP,CAEIM,IAAK6L,EACL5L,IAAK+L,EACL9L,OAAOkB,OAAAwJ,GAAA,EAAAxJ,CAAA,GAAK1B,EAAMQ,OAAWwL,GAC7B9J,OAAQ+J,IAGhB,IAAK,qBACD7J,QAAQC,IAAI4I,EAAOhJ,OACnB,IAAIsK,EAAYtB,EAAOhJ,MAAMoE,YACzBmG,EAAgB,GAChBC,EAAgBxB,EAAOhJ,MAAMiK,QAC7BQ,GAAcD,EAAcL,WAAW9L,IAAImM,EAAcJ,WAAW/L,KAAK,EACzEqM,GAAcF,EAAcL,WAAW7L,IAAIkM,EAAcJ,WAAW9L,KAAK,EAa7E,OAZAiM,EAAgBD,GAAY,CACxBtK,MAAMgJ,EAAOhJ,MACb0J,UAAU,UACV7M,KAAK,2BACLK,QAAQ,GACR0B,MAAM,GACNlB,OAAO,GACPiB,WAAY,CAAC8L,EAAWC,GACxBjN,GAAGuL,EAAOhJ,MAAMoE,YAChBnE,OAAQuK,GAGL/K,OAAAwJ,GAAA,EAAAxJ,CAAA,GACA1B,EADP,CAEIM,IAAKoM,EACLnM,IAAKoM,EACLzK,OAAQuK,EACRjM,OAAOkB,OAAAwJ,GAAA,EAAAxJ,CAAA,GAAK1B,EAAMQ,OAAWgM,KAGrC,IAAK,sBAED,IAAII,EAAa3B,EAAOhJ,MAAMoE,YAC1BwG,EAAiB,GACjBC,EAAY7B,EAAOhJ,MAAMiK,QACzBa,GAASD,EAAWV,WAAW9L,IAAIwM,EAAWT,WAAW/L,KAAK,EAC9D0M,GAASF,EAAWV,WAAW7L,IAAIuM,EAAWT,WAAW9L,KAAK,EAalE,OAZAsM,EAAiBD,GAAa,CAC1B3K,MAAMgJ,EAAOhJ,MACb0J,UAAU,WACV7M,KAAK,2BACLK,QAAQ,GACR0B,MAAM,GACNlB,OAAO,GACPiB,WAAY,CAACmM,EAAMC,GACnBtN,GAAGuL,EAAOhJ,MAAMoE,YAChBnE,OAAQ4K,GAGLpL,OAAAwJ,GAAA,EAAAxJ,CAAA,GACA1B,EADP,CAEIM,IAAKyM,EACLxM,IAAKyM,EACL9K,OAAQ4K,EACRtM,OAAOkB,OAAAwJ,GAAA,EAAAxJ,CAAA,GAAK1B,EAAMQ,OAAWqM,KAIrC,IAAK,oBAEG,IACII,EAAe,GAanB,OAZAA,EAFehC,EAAOhJ,MAAMoE,aAEF,CACtBpE,MAAMgJ,EAAOhJ,MACb0J,UAAU,SACV7M,KAAK,2BACLK,QAAQ,GACR0B,MAAM,GACNlB,OAAO,GACPiB,WAAY,CAACqK,EAAOhJ,MAAMmF,QAAQ9G,IAAI2K,EAAOhJ,MAAMmF,QAAQ7G,KAC3Db,GAAGuL,EAAOhJ,MAAMoE,YAChBzD,KAAMqI,EAAOrI,MAGVlB,OAAAwJ,GAAA,EAAAxJ,CAAA,GACA1B,EADP,CAEIM,IAAK2K,EAAOhJ,MAAMmF,QAAQ9G,IAC1BC,IAAK0K,EAAOhJ,MAAMmF,QAAQ7G,IAC1BqC,KAAMqI,EAAOrI,KACbpC,OAAOkB,OAAAwJ,GAAA,EAAAxJ,CAAA,GAAK1B,EAAMQ,OAAWyM,KAIzC,IAAK,cAEG,IAAIC,EAAUxL,OAAOiF,KAAKsE,EAAOhJ,MAAMkL,SAyCvC,OAvCA/K,QAAQC,IAAIrC,EAAMQ,QAIA8K,aAAQtL,EAAO,SAAAuL,GAC7B2B,EAAQpJ,IAAI,SAACpE,EAAGmH,GAGZ,IAAIuG,EAAYnC,EAAOhJ,MAAMkL,QAAQzN,GAErC,GADA6L,EAAW/K,OAAOd,GAAIuC,MAAQmL,EAAU1N,GACD,WAApC6L,EAAW/K,OAAOd,GAAIiM,UACrBJ,EAAW/K,OAAOd,GAAIkB,WAAa,CAACwM,EAAUhG,QAAQ9G,IAAI8M,EAAUhG,QAAQ7G,UAE1E,GAAuC,aAApCgL,EAAW/K,OAAOd,GAAIiM,UAAyB,CACpD,IAAI0B,EAAQD,EAAUlB,QAClBoB,GAAKD,EAAOjB,WAAW9L,IAAI+M,EAAOhB,WAAW/L,KAAK,EAClDiN,GAAKF,EAAOjB,WAAW7L,IAAI8M,EAAOhB,WAAW9L,KAAK,EACtDgL,EAAW/K,OAAOd,GAAIkB,WAAa,CAAC0M,EAAEC,QAEpC,GAAuC,YAApChC,EAAW/K,OAAOd,GAAIiM,UAAwB,CACnD,IAAI0B,EAAQD,EAAUlB,QAClBoB,GAAKD,EAAOjB,WAAW9L,IAAI+M,EAAOhB,WAAW/L,KAAK,EAClDiN,GAAKF,EAAOjB,WAAW7L,IAAI8M,EAAOhB,WAAW9L,KAAK,EACtDgL,EAAW/K,OAAOd,GAAIkB,WAAa,CAAC0M,EAAEC,QAEpC,GAAuC,cAApChC,EAAW/K,OAAOd,GAAIiM,UAA0B,CACrD,IAAI0B,EAAQD,EAAUlB,QAClBoB,GAAKD,EAAOjB,WAAW9L,IAAI+M,EAAOhB,WAAW/L,KAAK,EAClDiN,GAAKF,EAAOjB,WAAW7L,IAAI8M,EAAOhB,WAAW9L,KAAK,EACtDgL,EAAW/K,OAAOd,GAAIkB,WAAa,CAAC0M,EAAEC,OAEG,WAApChC,EAAW/K,OAAOd,GAAIiM,YAC3BJ,EAAW/K,OAAOd,GAAIkB,WAAa,CAACwM,EAAUhG,QAAQ9G,IAAI8M,EAAUhG,QAAQ7G,UAShG,IAAK,gBACD,IAAIiN,EAAW9L,OAAOiF,KAAKsE,EAAOhJ,MAAMkL,SAQxC,OAPoB7B,aAAQtL,EAAO,SAAAuL,GAE/B,IAAI,IAAIkC,EAAI,EAAGA,EAAGD,EAASzC,OAAQ0C,WACxBlC,EAAW/K,OAAOgN,EAASC,MAK9C,QACI,OAAOzN,IC3WA0N,GApBF,SAAC1N,EAAQiL,GAEpB,MAAoB,eAAhBA,EAAO9N,MACTiF,QAAQC,IAAIrC,EAAMjD,aACM,IAArBiD,EAAMjD,WACP2E,OAAAwJ,GAAA,EAAAxJ,CAAA,GACK1B,EADL,CAEEjD,YAAY,IAGd2E,OAAAwJ,GAAA,EAAAxJ,CAAA,GACK1B,EADL,CAEEjD,YAAY,KAILiD,GCHA2N,GAPKC,aAEhB/C,GACA6C,ozCCLJ,IAAMjQ,GAASC,IAAOqD,OAAV8M,MAQNC,GAAMpQ,IAAOqQ,GAAVC,MA0CHC,GAAgBC,YAAHC,MASbC,GAAgBF,YAAHG,MAUbC,GAAO5Q,IAAOI,IAAVyQ,KAUO,SAAApQ,GAAK,OAAIA,EAAMqQ,WAAaP,GAAgBG,KAIvDK,eACF,SAAAA,EAAYtQ,GAAO,IAAAI,EAAA,OAAAmD,OAAAC,EAAA,EAAAD,CAAAxD,KAAAuQ,IACflQ,EAAAmD,OAAAE,EAAA,EAAAF,CAAAxD,KAAAwD,OAAAG,EAAA,EAAAH,CAAA+M,GAAA3M,KAAA5D,KAAMC,KASVuQ,QAAU,WACNnQ,EAAKoQ,SAAS,CACVH,YAAajQ,EAAKyB,MAAMwO,cAT5BjQ,EAAKyB,MAAM,CACPwO,YAAa,GAJFjQ,wEAyBV,IAAAiH,EAAAtH,KAEL,OAGIM,EAAAC,EAAAC,cAAC4P,GAAD,CAAM/O,MAAS,CAAChC,OAAQ,oBAAqB6G,QAAS,IAAQoK,WAActQ,KAAK8B,MAAMwO,YACnFhQ,EAAAC,EAAAC,cAACkQ,GAAD,CAAQ/O,QAAW3B,KAAKwQ,SAAxB,SACGxQ,KAAK8B,MAAMwO,WAAiBhQ,EAAAC,EAAAC,cAACoP,GAAD,KAEtB5P,KAAKC,MAAM0Q,OAA+BnN,OAAOiF,KAAKzI,KAAKC,MAAM0Q,QAAQ/K,IAAI,SAACiF,EAAMC,GACjF,OAIIxK,EAAAC,EAAAC,cAAA,MAAIY,UAAU,QAAQwH,IAAKtB,EAAKrH,MAAM0Q,OAAO9F,GAAMrJ,IAC/ClB,EAAAC,EAAAC,cAAA,QAAMY,UAAU,WAAWC,MAAQ,CAACuG,OAAO,WAAapG,GAAI8F,EAAKrH,MAAM0Q,OAAO9F,GAAMrJ,GAAIG,QAAU,SAAA5B,GAAC,OAAIuH,EAAKrH,MAAM2Q,QAAQtJ,EAAKrH,MAAM0Q,OAAO9F,MAASvD,EAAKrH,MAAM0Q,OAAO9F,GAAMjK,MAE7KN,EAAAC,EAAAC,cAAA,UAAQY,UAAU,aAAaO,QAAS,SAAA5B,GAAC,OAAIuH,EAAKrH,MAAM4Q,UAAU/F,KAAlE,KAEAxK,EAAAC,EAAAC,cAAA,MAAIY,UAAU,UAAUC,MAAO,CAAClC,QAASmI,EAAKrH,MAAM+B,QAAQwK,YAAY1B,GAAS,QAAU,SAEnFxK,EAAAC,EAAAC,cAAA,UAAK8G,EAAKrH,MAAM0Q,OAAO9F,GAAM5J,SAC7BX,EAAAC,EAAAC,cAAA,UAAK8G,EAAKrH,MAAM0Q,OAAO9F,GAAMnI,YAC7BpC,EAAAC,EAAAC,cAAA,UAAK8G,EAAKrH,MAAM0Q,OAAO9F,GAAMlI,OAC7BrC,EAAAC,EAAAC,cAAA,UAAK8G,EAAKrH,MAAM0Q,OAAO9F,GAAMpJ,YAf9B,yBAFA,WAjCrBG,aAqFPC,eArBS,SAAAC,GACpB,MAAO,CACHE,QAASF,EAAME,QACf2O,OAAQ7O,EAAMQ,SAKK,SAAAC,GACvB,MAAO,CACHsO,UAAW,SAAArP,GACPe,ET1Fa,SAACf,GACtB,MAAM,CACFvC,KAAK,YACLuC,MSuFaqP,CAAUrP,KAGvBoP,QAAS,SAAAhO,GACLL,ETjFW,SAACK,GACpB,MAAM,CACF3D,KAAK,UACL2D,QS8EagO,CAAQhO,OAMdf,CAA6C0O,ICrKxDO,GAAQC,aAAYtB,GAAYuB,OAAOC,8BAAgCD,OAAOC,gCAClF/M,QAAQC,IAAI2M,GAAMI,gBA0BHC,oLAbX,OACE7Q,EAAAC,EAAAC,cAAC4Q,EAAA,EAAD,CAAUN,MAAOA,IACnBxQ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6Q,GAAD,MACA/Q,EAAAC,EAAAC,cAAC8Q,GAAD,MACAhR,EAAAC,EAAAC,cAAC+Q,GAAD,MACAjR,EAAAC,EAAAC,cAACgR,EAAD,eAlBY5P,aCEE6P,QACW,cAA7BT,OAAO9D,SAASwE,UAEe,UAA7BV,OAAO9D,SAASwE,UAEhBV,OAAO9D,SAASwE,SAASC,MACvB,kECXNC,IAASC,OAAOvR,EAAAC,EAAAC,cAACsR,GAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhJ,KAAK,SAAAiJ,GACjCA,EAAaC","file":"static/js/main.aac9c956.chunk.js","sourcesContent":["import * as firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAaJRAXIpk4_xAt3ZNL1hgaIomltO4XF-U\",\r\n  authDomain: \"api-project-753794405349.firebaseapp.com\",\r\n  databaseURL: \"https://api-project-753794405349.firebaseio.com\",\r\n  projectId: \"api-project-753794405349\",\r\n  storageBucket: \"\",\r\n  messagingSenderId: \"753794405349\",\r\n  appId: \"1:753794405349:web:96e6c32e1db2d99e\",\r\n  measurementId: \"G-CE47ZZWRXR\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nconst databaseRef = firebase.database().ref();\r\nexport const firestore = firebase.firestore();\r\nexport const docRef = firestore.doc(\"test/points\")\r\nexport const pointsRef = databaseRef.child(\"points\")","import {pointsRef, docRef, firestore} from '../config/config'\r\nimport { thisExpression } from '@babel/types'\r\n\r\nexport const Geo = (inputText) =>{\r\n    return{\r\n        type:'Geo',\r\n        inputText,\r\n        \r\n    }\r\n}\r\n\r\nexport const AhandleChange = (LayerId) => {\r\n    return{\r\n        type:'AhandleChange',\r\n        LayerId\r\n    }\r\n  }\r\nexport const AupdateInputText=(inputText) => {\r\n    return{\r\n        type:'AupdateInputText',\r\n        inputText\r\n    }\r\n}\r\n\r\nexport const handleName = (name) => {\r\n    return{\r\n        type:'handleName',\r\n        name\r\n    }\r\n}\r\n\r\nexport const handleAddress = (address) => {\r\n    return{\r\n        type:'handleAddress',\r\n        address\r\n    }\r\n}\r\n\r\nexport const handleCoordinate = (coordinate) => {\r\n    return{\r\n        type:'handleCoordinate',\r\n        coordinate\r\n    }\r\n}\r\n\r\nexport const handlePhoto = (photo) => {\r\n    return{\r\n        type:'handlePhoto',\r\n        photo\r\n    }\r\n}\r\n\r\nexport const handleRemark = (remark) => {\r\n    return{\r\n        type:'handleRemark',\r\n        remark\r\n    }\r\n}\r\n\r\nexport const handleSubmit = (fdata) => {\r\n    return{\r\n        type:'handleSubmit',\r\n        fdata\r\n    }\r\n}\r\n\r\nexport const AddGroupMarkers = (latlng) => {\r\n    return{\r\n        type:'AddGroupMarkers',\r\n        latlng\r\n    }\r\n}\r\n\r\nexport const ulonclick = (id) => {\r\n    return{\r\n        type:'ulonclick',\r\n        id\r\n    }\r\n}\r\n\r\nexport const getmoveend = e => {\r\n    return{\r\n        type:\"getmoveend\",\r\n        e\r\n    }\r\n}\r\nexport const pointer = (data) => {\r\n    return{\r\n        type:'pointer',\r\n        data\r\n    }\r\n}\r\n\r\nexport const removeLi = (layer) => {\r\n    return{\r\n        type: 'removeLi',\r\n        layer\r\n    }\r\n}\r\n\r\nexport const mapcursor = (cursortype) => {\r\n    return{\r\n        type: 'mapcursor',\r\n        cursortype\r\n    }\r\n}\r\n\r\nexport const toolstate = (toolstate) => {\r\n    return{\r\n        type: 'toolstate',\r\n        toolstate\r\n    }\r\n}\r\n//加入圖層\r\nexport const DispatchAddMarker = (layer) => {\r\n    console.log(layer)\r\n    //path.join(path_a, path_b)\r\n    let path = \"points/\"+layer._leaflet_id\r\n    \r\n    firestore.doc(path).set({coordinate:[layer._latlng.lng,layer._latlng.lat],type:\"marker\"}).then(()=>{\r\n        console.log('save')\r\n    }).catch(error=>{\r\n        console.log(error)\r\n    })\r\n    return{\r\n        type: 'DispatchAddMarker',\r\n        layer,\r\n        \r\n    }\r\n}\r\nexport const DispatchAddCircle = (layer) => {\r\n    return{\r\n        type: 'DispatchAddCircle',\r\n        layer,\r\n        \r\n    }\r\n}\r\n\r\nexport const DispatchAddRectangle = (layer,zoom) => {\r\n    return{\r\n        type: 'DispatchAddRectangle',\r\n        layer,\r\n        zoom\r\n    }\r\n}\r\n\r\nexport const DispatchAddPolyline = (layer,zoom) => {\r\n    return{\r\n        type: 'DispatchAddPolyline',\r\n        layer,\r\n        zoom\r\n    }\r\n}\r\n\r\nexport const DispatchAddPolygon = (layer,zoom) => {\r\n    return{\r\n        type: 'DispatchAddPolygon',\r\n        layer,\r\n        zoom\r\n    }\r\n}\r\n\r\nexport const GoogleMarkerToLayer = (marker) => {\r\n    return{\r\n        type: 'GoogleMarkerToLayer',\r\n        marker,\r\n    }\r\n}\r\n\r\n//修改圖層\r\nexport const EditFeature = (layer,zoom) => {\r\n    return{\r\n        type: 'EditFeature',\r\n        layer,\r\n        zoom\r\n    }\r\n}\r\n\r\n//刪除圖層\r\n\r\nexport const DeleteFeature = (layer,zoom) => {\r\n    return{\r\n        type: 'DeleteFeature',\r\n        layer,\r\n        zoom\r\n    }\r\n}\r\nexport const getFeatureID = (id) => {\r\n    return{\r\n        type: 'getFeatureID',\r\n        id\r\n    }\r\n}\r\n\r\n//API Async\r\n\r\nexport const addToDo = newToDo => async dispatch => {\r\n   pointsRef.push().set(newToDo);\r\n};\r\nexport const completeToDo = completeToDo => async dispatch => {\r\n   pointsRef.child(completeToDo).remove();\r\n};\r\nexport const fetchToDos = () => async dispatch => {\r\n   pointsRef.on(\"value\", snapshot => {\r\n    dispatch({\r\n      type: 'FETCH_TODOS',\r\n      payload: snapshot.val()\r\n    });\r\n  });\r\n};\r\n\r\n//madalactions\r\n\r\nexport const modalstate = mstate => {\r\n    return{\r\n        type: \"modalstate\",\r\n        mstate\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport {Popup } from \"react-leaflet\";\r\nimport styled, {keyframes }from 'styled-components'\r\nimport {handleName,handleAddress,handleCoordinate,handlePhoto,handleRemark,handleSubmit} from '../actions/index'\r\nimport { connect } from \"react-redux\";\r\nconst photostyle = {\r\n    display: 'inline-block',\r\n    width: '20px',\r\n    height: '20px',\r\n    backgroundColor: '#EEAA11',\r\n  }\r\nconst Button = styled.input`\r\nbackground: #666666;\r\nfloat: right;\r\n`\r\nconst PFrame = styled.div`\r\n\r\n    \r\n    background: #FFFFFF;\r\n    \r\n\r\n`\r\n\r\nclass PopupForm extends Component {\r\n\r\nhhandleSubmit (e) {\r\n    \r\n    //console.log(typeof(this.props.fdata.id))\r\n    this.props.handleSubmit(this.props.fdata)\r\n    e.preventDefault();\r\n    //console.log(this.props.fdata,this.props.sfdata)\r\n    \r\n}   \r\n\r\n    \r\n    \r\n\r\n    render() {\r\n        \r\n        return(\r\n            <Popup >\r\n                \r\n                <PFrame> \r\n                <form onSubmit={e=>this.hhandleSubmit(e)}>    \r\n                    <label >\r\n                        \r\n                        <input\r\n                        name=\"name\"\r\n                        type=\"text\"\r\n                        placeholder=\"請輸入地點名稱\"\r\n                        value={this.props.fdata.name}\r\n                        onChange={this.props.handleName} \r\n                        />\r\n                    </label>\r\n                    <br/>\r\n                    <label>\r\n                        \r\n                        <input\r\n                        name=\"address\"\r\n                        type=\"text\"\r\n                        placeholder=\"請輸入地址\"\r\n                        value={this.props.fdata.address||\"\"}\r\n                        onChange={this.props.handleAddress} \r\n                        />\r\n                    </label>\r\n                    <br />\r\n                    \r\n                    <label htmlFor=\"file\"><span className='fa fa-edit edit-icon' style = {photostyle}> </span></label>\r\n\r\n                    \r\n                      <input\r\n                        className =\"edit-icon\"\r\n                        name=\"photo\"\r\n                        type=\"file\"\r\n                        ref={input => {\r\n                          this.fileInput = input;\r\n                        }} \r\n                        onChange={this.props.handlePhoto} \r\n                        id=\"file\"\r\n                        style={{display: 'none'}}\r\n                        />\r\n                    \r\n                    <br />\r\n                    <label>\r\n                        備註:\r\n                        <input \r\n                            name=\"remark\"\r\n                            type=\"text\"\r\n                            value={this.props.fdata.remark}\r\n                            onChange={this.props.handleRemark}\r\n                            />\r\n                    </label>\r\n                    <Button type=\"submit\" value=\"Submit\" onClick= {e=>this.hhandleSubmit(e)}></Button>\r\n                </form>\r\n                </PFrame>\r\n            \r\n            </Popup>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        fdata: state.fdata,\r\n        LayerId: state.LayerId,\r\n        ulstate: state.ulstate,\r\n        position:[Math.round(state.lat*10000)/10000,Math.round(state.lng*10000)/10000],\r\n        sfdata: state.sfdata,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        handleName: e => {\r\n            dispatch(handleName(e.target.value))\r\n        },\r\n        handleAddress: e => {\r\n            dispatch(handleAddress(e.target.value))\r\n        },\r\n        handleCoordinate: e => {\r\n            dispatch(handleCoordinate(e.target.value))\r\n        },\r\n        handlePhoto: e => {\r\n            dispatch(handlePhoto(e.target.value))\r\n        },\r\n        handleRemark: e => {\r\n            dispatch(handleRemark(e.target.value))\r\n        },\r\n        handleSubmit: data =>{\r\n            dispatch(handleSubmit(data))\r\n        },\r\n        \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PopupForm)","import React, { Component } from 'react';\r\nimport {Popup } from \"react-leaflet\";\r\nimport styled from 'styled-components'\r\nimport {GoogleMarkerToLayer} from '../actions/index'\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Button = styled.button`\r\ncolor: tomato;\r\nbackground: #666666;\r\nfloat: right;\r\n`\r\nconst PFrame = styled.div`\r\n\r\n    \r\n    background: #FFFFFF;\r\n    \r\n\r\n`\r\n\r\nclass GooglePopupForm extends Component {\r\n\r\n\r\n\r\n    \r\n    \r\n\r\n    render() {\r\n        \r\n        return(\r\n            <Popup >\r\n                \r\n                <PFrame> \r\n                  \r\n                    <span>{this.props.GoogleSearchMarker.value.formatted_address}</span>\r\n                        \r\n                        \r\n                    \r\n                    <br/>\r\n\r\n                    <span>\r\n                        {this.props.GoogleSearchMarker.position}\r\n                        \r\n                    </span>\r\n                    <Button type=\"submit\"  onClick= {e=>this.props.GoogleMarkerToLayer(e)}>加入圖層</Button>\r\n                \r\n                </PFrame>\r\n            \r\n            </Popup>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        fdata: state.fdata,\r\n        LayerId: state.LayerId,\r\n        ulstate: state.ulstate,\r\n        position:[Math.round(state.lat*10000)/10000,Math.round(state.lng*10000)/10000],\r\n        GoogleSearchMarker:state.GoogleSearchMarker,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        \r\n        GoogleMarkerToLayer: marker =>{\r\n            dispatch(GoogleMarkerToLayer(marker))\r\n        },\r\n        \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GooglePopupForm)","import React, { Component } from 'react';\r\nimport {GoogleLayer} from 'react-leaflet-google';\r\nimport { Map, TileLayer, Marker,FeatureGroup, Popup} from 'react-leaflet';\r\nimport WMTSTileLayer from 'react-leaflet-wmts';\r\nimport {getmoveend, DispatchAddMarker, DispatchAddCircle, DispatchAddPolyline, DispatchAddPolygon, DispatchAddRectangle, EditFeature, removeLi, DeleteFeature, getFeatureID} from '../actions/index';\r\nimport { connect } from \"react-redux\";\r\nimport  PopupForm  from './popupform';\r\nimport GooglePopupForm from './GoogleSearchPopup';\r\nimport { EditControl } from \"react-leaflet-draw\";\r\nimport * as filelayer from 'leaflet-filelayer'\r\nimport L from 'leaflet'\r\nimport { exportDefaultSpecifier } from '@babel/types';\r\n\r\n\r\n\r\n\r\nconst key = 'AIzaSyB-DzlaXFMDeKrnNKs_EzP27BTnqZ5BfiE'\r\n\r\n\r\n\r\n\r\nclass Main extends Component {\r\n    constructor() {\r\n      super()\r\n      this.state={\r\n        bluemarble: false,\r\n        \r\n      }\r\n    }\r\n\r\n\r\n    layeradd (e) {\r\n      \r\n      let zoom = this.getMapZoom()\r\n      if(e.layer.dragging){\r\n        //console.log('true')\r\n        this.props.DispatchAddMarker(e.layer,zoom)\r\n      }\r\n      \r\n\r\n    }\r\n    GPXimport () {\r\n        L.Control.fileLayerLoad({\r\n          // Allows you to use a customized version of L.geoJson.\r\n          // For example if you are using the Proj4Leaflet leaflet plugin,\r\n          // you can pass L.Proj.geoJson and load the files into the\r\n          // L.Proj.GeoJson instead of the L.geoJson.\r\n          layer: L.geoJson,\r\n          // See http://leafletjs.com/reference.html#geojson-options\r\n          layerOptions: {style: {color:'red'}},\r\n          // Add to map after loading (default: true) ?\r\n          addToMap: true,\r\n          // File size limit in kb (default: 1024) ?\r\n          fileSizeLimit: 1024,\r\n          // Restrict accepted file formats (default: .geojson, .json, .kml, and .gpx) ?\r\n          formats: [\r\n              '.geojson',\r\n              '.kml',\r\n              '.gpx'\r\n          ]\r\n      }).addTo(this.map)\r\n      \r\n      \r\n    }\r\n    getMapZoom() {\r\n      return this.map && this.map.leafletElement.getZoom();\r\n   }\r\n\r\n    getBounds() {\r\n      if(typeof(this.props.bounds) === \"object\"){\r\n        return this.props.bounds\r\n      }else{\r\n      return this.map && this.map.leafletElement.getBounds();\r\n      }\r\n    }\r\n\r\n    GoogleSearchMarker (status) {\r\n      //console.log(this.props.GoogleSearchStatus,status)\r\n      if(status == 'OK'){\r\n        return(\r\n          <Marker position={this.props.GoogleSearchPosition} opacity = {1}>\r\n            <GooglePopupForm/>\r\n          </Marker>\r\n        )\r\n      }\r\n    }\r\n    ToolStateSwitch(boolean) {\r\n      \r\n      if(boolean === true){\r\n        return(\r\n          \r\n            <EditControl\r\n                position='topright'\r\n                onEdited={this._onEditPath}\r\n                onCreated={this._onCreated}\r\n                onDeleted={this._onDeleted}\r\n                draw={{\r\n                  rectangle: true,\r\n                  circlemarker: false,\r\n                  \r\n                }}\r\n                \r\n            />\r\n        )\r\n      }\r\n    }\r\n    \r\n    LayerSwitch(LayerId) {\r\n      \r\n      if (LayerId ==0) {\r\n        \r\n        return(<TileLayer\r\n            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n        )\r\n      }\r\n      else if(LayerId ==1){\r\n        \r\n        return(\r\n          <GoogleLayer googlekey={key}  maptype='HYBRID' />\r\n        )\r\n      }\r\n      else if(LayerId ==2){\r\n        \r\n        return(\r\n          <WMTSTileLayer\r\n                  url=\"https://wmts.nlsc.gov.tw/wmts\"\r\n                  layer= \"EMAP\"//layer={this.state.bluemarble ? \"EMAP\":\"LANDSECT\"}\r\n                  tilematrixSet=\"EPSG:3857\"\r\n                  format=\"image/jpeg\"\r\n                  transparent={true}\r\n                  opacity={1}       \r\n          />\r\n        )\r\n      }\r\n    }\r\n    _onCreated = (e) => {\r\n      let type = e.layerType;\r\n      let layer = e.layer;\r\n      let bounds = this.getBounds()\r\n      console.log(e.layer);\r\n      if (type === 'marker') {\r\n        // Do marker specific actions\r\n        this.props.DispatchAddMarker(layer)\r\n        console.log(\"_onCreated: marker created\", this.props.sfdata);\r\n      }\r\n      else if(type === 'circle'){\r\n        this.props.DispatchAddCircle(layer)\r\n        //this.GPXimport()\r\n        console.log(\"_onCreated: circle created\", this.props.sfdata);\r\n      }else if(type === 'polyline'){\r\n        this.props.DispatchAddPolyline(layer,bounds)\r\n        console.log(\"_onCreated: polyline created\", this.props.sfdata);\r\n      }else if(type === 'polygon'){\r\n        this.props.DispatchAddPolygon(layer,bounds)\r\n        console.log(\"_onCreated: polygon created\", this.props.sfdata);\r\n      }else if(type === 'rectangle'){\r\n        this.props.DispatchAddRectangle(layer,bounds)\r\n        console.log(\"_onCreated: rectangle created\", this.props.sfdata);\r\n      }\r\n      \r\n      //console.log(e.layer);\r\n      //console.log(e.layer._leaflet_id);\r\n    }\r\n    _onEditPath =(e) => {\r\n      console.log(e)\r\n      let zoom = this.getMapZoom()\r\n      this.props.EditFeature(e.layers,zoom)\r\n\r\n      console.log(this.props.sfdata)\r\n    }\r\n    _onDeleted =(e) => {\r\n      console.log(e)\r\n      \r\n      this.props.DeleteFeature(e.layers)\r\n      console.log(this.props.sfdata)\r\n    }\r\n    render() {\r\n      let centerposition = [this.props.lat, this.props.lng]\r\n      \r\n      //console.log(centerposition,[this.props.lat, this.props.lng])\r\n      return (\r\n        \r\n        <Map center={centerposition} \r\n             zoom={this.props.zoom}  \r\n             zoomControl = {false} \r\n             style={{zIndex:1,cursor: this.props.mapcursor}} \r\n             ref={(ref) => { this.map = ref; }} \r\n             //useFlyTo = {true}\r\n             bounds ={this.getBounds()}\r\n             onmoveend={e=>this.props.getmoveend(e)}\r\n             \r\n             >\r\n          \r\n          {this.LayerSwitch(this.props.LayerId)}\r\n          <FeatureGroup  onClick ={(e)=>this.props.getFeatureID(e.layer._leaflet_id)} onlayeradd ={(e)=>this.layeradd(e)} >\r\n            <PopupForm />\r\n            {this.ToolStateSwitch(this.props.toolsta)}\r\n            {Object.keys(this.props.MarkersPosition).map((id,idx) =>{\r\n              //console.log(this.props.MarkersPosition,id);\r\n              \r\n              return ( \r\n              <Marker key ={id} position={this.props.MarkersPosition[id]} opacity = {0.9} onClick={(e)=>console.log(e)}>\r\n                <PopupForm />\r\n              </Marker>\r\n              )\r\n            \r\n            })}\r\n          </FeatureGroup>\r\n          {this.GoogleSearchMarker(this.props.GoogleSearchStatus)}\r\n          \r\n          \r\n          \r\n        </Map>\r\n      )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n      return {\r\n          inputText: state.inputText,\r\n          LayerId: state.LayerId,\r\n          lat: state.lat,\r\n          lng: state.lng,\r\n          zoom: state.zoom,\r\n          bounds: state.bounds,\r\n          MarkersPosition: state.MarkersPosition,\r\n          mapcursor: state.mapcursor,\r\n          functiontype: state.functiontype,\r\n          toolsta: state.toolsta,\r\n          GoogleSearchStatus: state.GoogleSearchMarker.status,\r\n          GoogleSearchPosition: state.GoogleSearchMarker.position,\r\n          sfdata: state.sfdata,\r\n\r\n    \r\n      }\r\n  }\r\n  \r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    DispatchAddMarker: (layer) =>{\r\n      dispatch(DispatchAddMarker(layer))\r\n    },\r\n    DispatchAddCircle: (layer) =>{\r\n      dispatch(DispatchAddCircle(layer))\r\n    },\r\n    DispatchAddRectangle: (layer,zoom) =>{\r\n      dispatch(DispatchAddRectangle(layer,zoom))\r\n    },\r\n    DispatchAddPolygon: (layer,zoom) =>{\r\n      dispatch(DispatchAddPolygon(layer,zoom))\r\n    },\r\n    DispatchAddPolyline: (layer,zoom) =>{\r\n      dispatch(DispatchAddPolyline(layer,zoom))\r\n    },\r\n    removeLi: layer => {\r\n      dispatch(removeLi(layer))\r\n    },\r\n    EditFeature: (layer,zoom) => {\r\n      dispatch(EditFeature(layer,zoom))\r\n    },\r\n    DeleteFeature: (layer) => {\r\n      dispatch(DeleteFeature(layer))\r\n    },\r\n    getFeatureID: (ID) => {\r\n      dispatch(getFeatureID(ID))\r\n    },\r\n    getmoveend:(e) => {\r\n      dispatch(getmoveend(e))\r\n    }\r\n\r\n    \r\n    \r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main)","import React, { Component } from 'react'\r\nimport styled  from 'styled-components'\r\nimport Geocode  from 'react-geocode'\r\nimport {modalstate, Geo, AupdateInputText, AhandleChange, mapcursor, toolstate} from '../actions/index'\r\nimport { connect } from \"react-redux\";\r\n\r\nconst SearchBar = styled.div`\r\nheight: 100%;\r\nfloat: right;\r\ndisplay: block;\r\nmargin-left: auto;\r\nbackground: black;\r\ncolor: white;\r\ninput {\r\n    height: 20px;\r\n    margin: 4px;\r\n}\r\n`\r\nconst ToolBarOutline = styled.div`\r\nwidth: 100%;\r\nheight: 34px;\r\nbackground: black;\r\nposition: relative;\r\ncolor: white;\r\nselect {\r\n    height: 20px;\r\n    margin: 7px;\r\n    float:left;\r\n}\r\n`\r\nconst ToolBarMaterial = styled.div`\r\nwidth: 200px;\r\nheight: 29px;\r\nfloat: left;\r\n\r\ntop: 0px;\r\nbackground: black;\r\ncolor: white;\r\nmargin-top: 5px;\r\n.point {\r\n    margin:4px;\r\n    float:left;\r\n    cursor:pointer;\r\n}\r\n.importfile {\r\n    margin:4px;\r\n    float:left;\r\n    cursor:pointer;\r\n}\r\n\r\n`\r\n\r\nconst LayerList = [\r\n    { id:0, name:'OSM', url:''},\r\n    { id:1, name:'google', url:''},\r\n    { id:2, name:'hybird', url:''},\r\n]\r\n\r\nconst key = 'AIzaSyB-DzlaXFMDeKrnNKs_EzP27BTnqZ5BfiE'\r\n\r\n\r\n\r\nclass ToolBar extends Component {\r\n    \r\n    geoFirist(text) {\r\n    Geocode.setApiKey(key)\r\n    // Enable or disable logs. Its optional.\r\n    Geocode.enableDebug()\r\n    // Get latidude & longitude from address.\r\n    Geocode.fromAddress(text).then(\r\n        response => {\r\n\r\n            const address = response.results[0];\r\n            console.log(address)\r\n            this.props.Geo(address)\r\n          \r\n          \r\n        },\r\n        error => {\r\n          console.error(error);\r\n        }\r\n    )\r\n    }\r\n    updateInputText(event) {\r\n        let text = event.target.value\r\n        this.props.AupdateInputText(text)\r\n        \r\n        if(event.key === 'Enter'){\r\n            \r\n            this.geoFirist(text);\r\n        }\r\n        \r\n      }\r\n\r\n    handleChange(event) {\r\n      let id = event.target.value\r\n      this.props.AhandleChange(id)\r\n      \r\n    }  \r\n\r\n    render() {\r\n        //console.log(this.props.toolsta)\r\n        return(\r\n            <div>\r\n            <ToolBarOutline>\r\n                <select  value={this.props.LayerId} onChange={(event) => this.handleChange(event)}>\r\n                {LayerList.map((todo, index)=>{\r\n                        return(\r\n                            <option key={todo.id}\r\n                            value={todo.id}>{todo.name}\r\n                            </option>\r\n                        )\r\n                    })\r\n                }    \r\n                </select>\r\n                \r\n                <ToolBarMaterial>\r\n                    \r\n                    <span className=\"point\" onClick={e => this.props.toolstate(this.props.toolsta)}> Tools </span> \r\n                    <span className=\"importfile\" onClick={this.props.modalstate}> import File</span>    \r\n                </ToolBarMaterial>\r\n                <SearchBar>\r\n                    <input onChange={(event) => this.updateInputText(event)} \r\n                        value = {this.props.inputText} \r\n                        type=\"text\"  \r\n                        placeholder='請輸入地址'\r\n                        onKeyPress={(event) => this.updateInputText(event)}>\r\n                    </input>\r\n                </SearchBar>\r\n            </ToolBarOutline>\r\n            \r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        inputText: state.inputText,\r\n        LayerId: state.LayerId,\r\n        toolsta: state.toolsta,\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        Geo: inputText => {\r\n            dispatch(Geo(inputText))\r\n        },\r\n        AupdateInputText: inputText => {\r\n            dispatch(AupdateInputText(inputText))\r\n        },\r\n        AhandleChange: id =>{\r\n            dispatch(AhandleChange(id))\r\n        },\r\n        mapcursor: cursortype=>{\r\n            dispatch(mapcursor(cursortype))\r\n        },\r\n        toolstate: sboolean => {\r\n            dispatch(toolstate(sboolean))\r\n        },\r\n        modalstate: mboolean => {\r\n            dispatch(modalstate(mboolean))\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ToolBar)","import React, { Component } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form'\r\nimport { connect } from \"react-redux\";\r\nimport {modalstate, } from '../actions/index'\r\n\r\nclass Featuremodal extends Component {\r\n    constructor() {\r\n      super()\r\n      \r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <Modal show = {this.props.mmodalstate} onHide = {this.props.modalstate}>\r\n                    \r\n                      <Modal.Header closeButton >\r\n                        <Modal.Title>匯入檔案</Modal.Title>\r\n                      </Modal.Header>\r\n\r\n                      <Modal.Body>\r\n                      <Form>\r\n                        \r\n                        <Form.Group controlId=\"formBasicImage\">\r\n                          <Form.Text className=\"text-muted\">\r\n                            Please input GPX/Image/Raster/Vecter file\r\n                          </Form.Text>  \r\n                          <Form.Label  ></Form.Label>\r\n                          <Form.Control type=\"file\" placeholder=\"Image/Raster/PNG...\" />\r\n                        </Form.Group>\r\n                        \r\n                      </Form>\r\n                      </Modal.Body>\r\n\r\n                      <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.props.modalstate}> 結束 </Button>\r\n                        <Button variant=\"primary\"> 送出 </Button>\r\n                      </Modal.Footer>\r\n                    \r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        mmodalstate: state.modalstate\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        modalstate: mboolean => {\r\n            dispatch(modalstate(mboolean))\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Featuremodal)","import produce from \"immer\"\r\n\r\nconst initState = {\r\n    ulstate : {\r\n        OpenOrClose: [],\r\n    },\r\n    modalstate: false,\r\n    GoogleSearchMarker:{position:[0,0],status:'',value:{}},\r\n    lat: 25.0782884,\r\n    lng: 121.6067442,\r\n    MarkersPosition:{},\r\n    zoom: 11,\r\n    bounds:\"\",\r\n    LayerId : 0,\r\n    inputText:'',\r\n    response: {},\r\n    sfdata:{},\r\n    promiseaddress:\"\",\r\n    fdata:{\r\n      layer:{},\r\n      id:1,\r\n      name:\"\",\r\n      address:\"\",\r\n      coordinate:\"\",\r\n      photo:\"\",\r\n      remark:\"\",\r\n\r\n    },\r\n    mapcursor:'',\r\n    functiontype:'',\r\n    toolsta: false,\r\n    clickFeatureID: \"\",\r\n}\r\n\r\nconst MainR = (state = initState, action) =>{\r\nswitch (action.type) {\r\n    case 'Geo':\r\n        \r\n        return {\r\n            ...state, inputText:'',\r\n            lat: action.inputText.geometry.location.lat,\r\n            lng: action.inputText.geometry.location.lng,\r\n            zoom: 16,\r\n            response: action.inputText,\r\n            fdata: {...state.fdata, coordinate: [action.inputText.geometry.location.lat,action.inputText.geometry.location.lng]},\r\n            GoogleSearchMarker:{...state.GoogleSearchMarker,value:action.inputText,position:[action.inputText.geometry.location.lat,action.inputText.geometry.location.lng], status:'OK'},\r\n        }\r\n        \r\n        \r\n    \r\n    case 'AupdateInputText':\r\n        return{\r\n            ...state,inputText : action.inputText\r\n        }\r\n    case 'AhandleChange':\r\n        \r\n        return{\r\n            ...state , LayerId: action.LayerId\r\n        }\r\n    \r\n    case 'handleName':\r\n        \r\n        return{\r\n            ...state , fdata: {...state.fdata, name: action.name}\r\n        }\r\n\r\n    case 'handleAddress':\r\n        \r\n        return{\r\n            ...state , fdata: {...state.fdata, address: action.address}\r\n        }\r\n    \r\n    case 'handleCoordinate':\r\n        \r\n        return{\r\n            ...state , fdata: {...state.fdata, coordinate: [state.lat,state.lng]}\r\n        }\r\n\r\n    case 'handlePhoto':\r\n        \r\n        return{\r\n            ...state , fdata: {...state.fdata, photo: action.photo}\r\n        }\r\n\r\n    case 'handleRemark':\r\n        \r\n        return{\r\n            ...state , fdata: {...state.fdata, remark: action.remark}\r\n        }\r\n    \r\n    case 'handleSubmit':\r\n        //console.log(action.fdata)\r\n        //let markers = state.MarkersPosition\r\n        let idd = state.clickFeatureID\r\n        \r\n        //markers[idd] = action.fdata.coordinate\r\n        const submitState = produce(state,draftState =>{\r\n            draftState.sfdata[idd].name = action.fdata.name\r\n            draftState.sfdata[idd].address = action.fdata.address\r\n            draftState.sfdata[idd].photo = action.fdata.photo\r\n            draftState.sfdata[idd].remark = action.fdata.remark\r\n            \r\n\r\n        })\r\n        return submitState\r\n    case 'getFeatureID':\r\n        console.log(state.fdata,state.sfdata)\r\n        const clearsubmitState = produce(state,draftState =>{\r\n            \r\n            draftState.fdata.name = \"\"\r\n            draftState.fdata.address = state.sfdata[action.id].address\r\n            draftState.fdata.photo = \"\"\r\n            draftState.fdata.remark = \"\"\r\n\r\n            draftState.clickFeatureID= action.id\r\n        })\r\n        return clearsubmitState\r\n    case  'ulonclick': \r\n        //console.log(id)\r\n        let deltaA = state.ulstate.OpenOrClose\r\n        //console.log(deltaA)\r\n        deltaA[action.id] = !state.ulstate.OpenOrClose[action.id]\r\n        \r\n        return{ \r\n            ...state,\r\n            ulstate: {...state.ulstate,OpenOrClose:deltaA},\r\n                \r\n\r\n                \r\n                \r\n        }\r\n    case 'getmoveend':\r\n        //console.log(action.e.target._lastCenter)\r\n        //console.log(state.lat)\r\n        const getmoveend = produce(state, draftState => {\r\n            if(!!action.e.target._lastCenter){\r\n            draftState.zoom = action.e.target._animateToZoom\r\n            draftState.lat = action.e.target._lastCenter.lat\r\n            draftState.lng = action.e.target._lastCenter.lng\r\n            }\r\n        })\r\n        return getmoveend\r\n    case  'pointer': \r\n        //console.log(action.data.bounds)\r\n        const TypeOfPoint = produce(state, draftState => {\r\n\r\n            draftState.lat = action.data.coordinate[0]\r\n            draftState.lng = action.data.coordinate[1]\r\n            if(action.data.layertype === \"marker\"){\r\n                draftState.zoom = action.data.zoom\r\n            }else if(action.data.layertype === \"circle\"){\r\n                draftState.zoom = action.data.zoom\r\n            }else if(action.data.layertype === \"polygon\"){\r\n                draftState.bounds = action.data.bounds\r\n            }else if(action.data.layertype === \"polyline\"){\r\n                draftState.bounds = action.data.bounds\r\n            }else if(action.data.layertype === \"rectangle\"){\r\n                draftState.bounds = action.data.bounds\r\n            }\r\n            \r\n        })\r\n    \r\n        return TypeOfPoint\r\n    case 'GoogleMarkerToLayer':\r\n        let coor = state.GoogleSearchMarker.position\r\n        return{\r\n            ...state,\r\n            MarkersPosition:{...state.MarkersPosition,coor},\r\n            GoogleSearchMarker:{...state.GoogleSearchMarker, position:[0,0], status:'' ,value:{}}\r\n        }\r\n\r\n    case 'removeLi':\r\n        \r\n        return { \r\n            ...state,       \r\n            MarkersPosition: {}\r\n        }\r\n          \r\n    case 'mapcursor':\r\n        console.log(action.cursortype)\r\n        return{\r\n            ...state,\r\n            mapcursor: action.cursortype[0],\r\n            functiontype:action.cursortype[1],\r\n        }\r\n    \r\n    case 'toolstate':\r\n            //console.log(action.toolstate)\r\n        return{\r\n            ...state,\r\n            toolsta: !action.toolstate,\r\n        }    \r\n// 加入圖層\r\n    case 'DispatchAddMarker':\r\n        \r\n        let Markerid = action.layer._leaflet_id;\r\n        let MarkernewLayer={}\r\n        \r\n        MarkernewLayer[Markerid] ={\r\n            layer:action.layer,\r\n            layertype:\"marker\",\r\n            name:\"新增圖層\",\r\n            address:\"\",\r\n            photo:\"\",\r\n            remark:\"\",\r\n            coordinate: [action.layer._latlng.lat,action.layer._latlng.lng],\r\n            id:action.layer._leaflet_id,\r\n            zoom: 16,\r\n        }\r\n        //console.log(MarkernewLayer)   \r\n                    \r\n        return {\r\n            ...state, \r\n            lat: action.layer._latlng.lat,\r\n            lng: action.layer._latlng.lng,\r\n            zoom: 16,\r\n            sfdata: {...state.sfdata, ...MarkernewLayer},\r\n              \r\n        }\r\n    case 'DispatchAddRectangle':\r\n        console.log(action.layer._latlngs[0])\r\n        let rectangleid = action.layer._leaflet_id;\r\n        let rectanglenewLayer={}\r\n        let rectanglebounds = action.layer._bounds\r\n        let xposition = (rectanglebounds._northEast.lat+rectanglebounds._southWest.lat)/2\r\n        let yposition = (rectanglebounds._northEast.lng+rectanglebounds._southWest.lng)/2\r\n        //for ( let i = 0; i < action.layer._latlngs[0].length; i++) { xposition += action.layer._latlngs[0][i].lat}\r\n        //xposition = xposition/4\r\n        rectanglenewLayer[rectangleid] ={\r\n            layer:action.layer,\r\n            layertype:\"rectangle\",\r\n            name:\"新增圖層\",\r\n            address:\"\",\r\n            photo:\"\",\r\n            remark:\"\",\r\n            coordinate: [xposition,yposition],\r\n            id:action.layer._leaflet_id,\r\n            bounds: rectanglebounds,\r\n        }\r\n                       \r\n        return {\r\n            ...state, \r\n            lat: xposition,\r\n            lng: yposition,\r\n            sfdata: {...state.sfdata, ...rectanglenewLayer},\r\n            bounds: rectanglebounds,\r\n              \r\n        }\r\n    case 'DispatchAddPolygon':\r\n        console.log(action.layer)\r\n        let Polygonid = action.layer._leaflet_id;\r\n        let PolygonnewLayer={}\r\n        let polygonbounds = action.layer._bounds\r\n        let xxposition = (polygonbounds._northEast.lat+polygonbounds._southWest.lat)/2\r\n        let yyposition = (polygonbounds._northEast.lng+polygonbounds._southWest.lng)/2\r\n        PolygonnewLayer[Polygonid] ={\r\n            layer:action.layer,\r\n            layertype:\"polygon\",\r\n            name:\"新增圖層\",\r\n            address:\"\",\r\n            photo:\"\",\r\n            remark:\"\",\r\n            coordinate: [xxposition,yyposition],\r\n            id:action.layer._leaflet_id,\r\n            bounds: polygonbounds,\r\n        }\r\n                       \r\n        return {\r\n            ...state, \r\n            lat: xxposition,\r\n            lng: yyposition,\r\n            bounds: polygonbounds,\r\n            sfdata: {...state.sfdata, ...PolygonnewLayer},\r\n              \r\n        }\r\n    case 'DispatchAddPolyline':\r\n        //console.log(action.layer._latlng)\r\n        let Polylineid = action.layer._leaflet_id;\r\n        let PolylinenewLayer={};\r\n        let LineBounds =action.layer._bounds;\r\n        let linex = (LineBounds._northEast.lat+LineBounds._southWest.lat)/2\r\n        let liney = (LineBounds._northEast.lng+LineBounds._southWest.lng)/2\r\n        PolylinenewLayer[Polylineid] ={\r\n            layer:action.layer,\r\n            layertype:\"polyline\",\r\n            name:\"新增圖層\",\r\n            address:\"\",\r\n            photo:\"\",\r\n            remark:\"\",\r\n            coordinate: [linex,liney],\r\n            id:action.layer._leaflet_id,\r\n            bounds: LineBounds,\r\n        }\r\n                       \r\n        return {\r\n            ...state, \r\n            lat: linex,\r\n            lng: liney,\r\n            bounds: LineBounds,\r\n            sfdata: {...state.sfdata, ...PolylinenewLayer},\r\n              \r\n        }\r\n\r\n    case 'DispatchAddCircle':\r\n            //console.log(action.layer._latlng)\r\n            let Circleid = action.layer._leaflet_id;\r\n            let CirclenewLayer={}\r\n            CirclenewLayer[Circleid] ={\r\n                layer:action.layer,\r\n                layertype:\"circle\",\r\n                name:\"新增圖層\",\r\n                address:\"\",\r\n                photo:\"\",\r\n                remark:\"\",\r\n                coordinate: [action.layer._latlng.lat,action.layer._latlng.lng],\r\n                id:action.layer._leaflet_id,\r\n                zoom: action.zoom,\r\n            }\r\n                           \r\n            return {\r\n                ...state, \r\n                lat: action.layer._latlng.lat,\r\n                lng: action.layer._latlng.lng,\r\n                zoom: action.zoom,\r\n                sfdata: {...state.sfdata, ...CirclenewLayer},\r\n                  \r\n            }\r\n// 修改圖層 \r\n    case 'EditFeature':\r\n            \r\n            let Feature = Object.keys(action.layer._layers)\r\n            //console.log(Feature)\r\n            console.log(state.sfdata)\r\n            \r\n            \r\n\r\n            const EditState = produce(state, draftState => {\r\n                Feature.map((id,idx) =>{\r\n                    //console.log(action.layer._layers[id])\r\n                    //console.log(draftState.sfdata)\r\n                    let editlayer = action.layer._layers[id]\r\n                    draftState.sfdata[id].layer = editlayer[id]\r\n                    if(draftState.sfdata[id].layertype === 'marker'){\r\n                        draftState.sfdata[id].coordinate = [editlayer._latlng.lat,editlayer._latlng.lng]\r\n                        //draftState.sfdata[id].address = geoLatLngToAddress([editlayer._latlng.lat,editlayer._latlng.lng])\r\n                    }else if(draftState.sfdata[id].layertype === 'polyline'){\r\n                        let Bounds =editlayer._bounds;\r\n                        let x = (Bounds._northEast.lat+Bounds._southWest.lat)/2\r\n                        let y = (Bounds._northEast.lng+Bounds._southWest.lng)/2\r\n                        draftState.sfdata[id].coordinate = [x,y]\r\n                        //draftState.sfdata[id].address = geoLatLngToAddress([x,y])\r\n                    }else if(draftState.sfdata[id].layertype === 'polygon'){\r\n                        let Bounds =editlayer._bounds;\r\n                        let x = (Bounds._northEast.lat+Bounds._southWest.lat)/2\r\n                        let y = (Bounds._northEast.lng+Bounds._southWest.lng)/2\r\n                        draftState.sfdata[id].coordinate = [x,y]\r\n                        //draftState.sfdata[id].address = geoLatLngToAddress([x,y])\r\n                    }else if(draftState.sfdata[id].layertype === 'rectangle'){\r\n                        let Bounds =editlayer._bounds;\r\n                        let x = (Bounds._northEast.lat+Bounds._southWest.lat)/2\r\n                        let y = (Bounds._northEast.lng+Bounds._southWest.lng)/2\r\n                        draftState.sfdata[id].coordinate = [x,y]\r\n                        //draftState.sfdata[id].address = geoLatLngToAddress([x,y])\r\n                    }else if(draftState.sfdata[id].layertype === 'circle'){\r\n                        draftState.sfdata[id].coordinate = [editlayer._latlng.lat,editlayer._latlng.lng]\r\n                        //draftState.sfdata[id].address = geoLatLngToAddress([editlayer._latlng.lat,editlayer._latlng.lng])\r\n                    }\r\n                    \r\n                    \r\n                })\r\n            })\r\n            return EditState \r\n// 刪除圖層 \r\n    case 'DeleteFeature':   \r\n        let DFeature = Object.keys(action.layer._layers)   \r\n        const DeleteState = produce(state, draftState => {\r\n\r\n            for(let i = 0; i< DFeature.length ;i++){\r\n                delete draftState.sfdata[DFeature[i]]\r\n            }\r\n        })\r\n\r\n        return DeleteState\r\n    default:\r\n        return state;\r\n}\r\n}\r\n\r\nexport default MainR","\r\nconst apiR = (state , action) => {\r\n    \r\n  if (action.type === \"modalstate\"){\r\n    console.log(state.modalstate)\r\n    if(state.modalstate === false){\r\n      return{\r\n        ...state,\r\n        modalstate: true\r\n      }\r\n    }else{\r\n      return{\r\n        ...state,\r\n        modalstate: false\r\n      }\r\n    }\r\n  }\r\n        return state\r\n    \r\n  }\r\n\r\nexport default apiR\r\n\r\n","import reduceReducers from 'reduce-reducers';\r\nimport MainR from './MainReducer'\r\nimport apiR from './ApiReducer'\r\n\r\n\r\n\r\n\r\nconst allReducers = reduceReducers(\r\n    \r\n    MainR,\r\n    apiR,\r\n\r\n    )\r\n\r\nexport default allReducers\r\n\r\n","import React, { Component } from 'react';\r\nimport styled, {keyframes }from 'styled-components'\r\nimport {ulonclick, pointer} from '../actions/index'\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Button = styled.button`\r\n\r\nfloat: right;\r\nz-index: 3;\r\n\r\n`\r\n\r\n\r\nconst Ful = styled.ul`\r\n\r\n\r\nmargin:25 0 0 0;\r\npadding:0;\r\nlist-style-type: none;\r\nli.subli{\r\n    margin-top:30px;\r\n}\r\nli.subli:hover{\r\n    margin-top:30px;\r\n}\r\na.subtitle{\r\n    margin-top:15px;\r\n}\r\nul.submenu{\r\n    \r\n    margin-left:25px;\r\n    list-style-type:disc;\r\n    color:#333333;\r\n}\r\nbutton.RemoveButton{\r\n    float: right;\r\n    opacity: 0.2;\r\n    transition: opacity .35s ease;\r\n}\r\nbutton.RemoveButton:hover{\r\n    float: right;\r\n    opacity: 1;\r\n}\r\nbutton.OpenButton{\r\n    float: right;\r\n    opacity: 0.2;\r\n    transition: opacity .35s ease;\r\n}\r\nbutton.OpenButton:hover{\r\n    float: right;\r\n    opacity: 1;\r\n}\r\n`\r\n\r\n\r\nconst SlideFromLtoR = keyframes`\r\n\r\nfrom{\r\n    width: 1%\r\n}\r\nto{\r\n    width: 15%\r\n}\r\n`\r\nconst SlideFromRtoL = keyframes`\r\n\r\nfrom{\r\n    width: 15%\r\n}\r\nto{\r\n    width: 1%\r\n}\r\n`\r\n\r\nconst Sbar = styled.div`\r\n    \r\n    \r\n    float: left;\r\n    display: block ;\r\n    margin-left: auto;\r\n    background: black;\r\n    color: white;\r\n    position: absolute;\r\n    z-index: 2;\r\n    animation: ${props=> (props.clickstate ? SlideFromLtoR : SlideFromRtoL)} 0.3s linear ;\r\n    animation-fill-mode: forwards;\r\n    `\r\n    \r\nclass SideBar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state={\r\n            clickstate : true,\r\n            \r\n            \r\n        }\r\n    }\r\n    \r\n    onclick = () =>{\r\n        this.setState({\r\n            clickstate: !this.state.clickstate,\r\n            \r\n        })\r\n        //console.log(Object.keys(this.props.record).length)\r\n        //console.log(typeof(this.props.record.id))\r\n        //console.log(this.props.record.id)\r\n        \r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n    render() {\r\n        //console.log(this.props.record)\r\n        return (\r\n            \r\n            //console.log(this.state.clickstate),\r\n            <Sbar style= { {height: 'calc(100% - 34px)', opacity: 0.5 ,}} clickstate = {this.state.clickstate}>\r\n                <Button onClick = {this.onclick}>click</Button>\r\n                { !this.state.clickstate ? '' :<Ful>\r\n                    {    //console.log(this.props.record),\r\n                        !this.props.record?\"this.props.record.map\":Object.keys(this.props.record).map((todo, index)=>{\r\n                            return(\r\n\r\n                                //console.log(this.props.record[todo].id),\r\n                                //console.log(index),\r\n                                <li className=\"subli\" key={this.props.record[todo].id}>\r\n                                    <span className=\"subtitle\" style= {{cursor:'pointer',}} id={this.props.record[todo].id} onClick ={e => this.props.pointer(this.props.record[todo])}>{this.props.record[todo].name}</span>\r\n                                    \r\n                                    <button className=\"OpenButton\" onClick={e => this.props.ulonclick(index)}>O</button>\r\n                                    \r\n                                    <ul className=\"submenu\" style={{display: this.props.ulstate.OpenOrClose[index] ? 'block' : 'none' }}>\r\n\r\n                                            <li>{this.props.record[todo].address}</li>\r\n                                            <li>{this.props.record[todo].coordinate}</li>\r\n                                            <li>{this.props.record[todo].photo}</li>\r\n                                            <li>{this.props.record[todo].remark}</li>\r\n\r\n                                    </ul>\r\n                                </li>    \r\n\r\n                            )\r\n                        })                      \r\n                    }</Ful>\r\n                }\r\n            </Sbar>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ulstate: state.ulstate,\r\n        record: state.sfdata,\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        ulonclick: id => {\r\n            dispatch(ulonclick(id))\r\n        },\r\n        \r\n        pointer: data => {\r\n            dispatch(pointer(data))\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBar)","import React, { Component } from 'react'\nimport Main from './component/main' \nimport ToolBar from './component/toolbar'\nimport Featuremodal from './component/featuremodal'\nimport {createStore} from 'redux'\nimport { Provider } from \"react-redux\";\nimport allReducers from './reducers/index';\nimport SideBar from './component/sidebar';\nlet store = createStore(allReducers,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\nconsole.log(store.getState())\nclass App extends Component {\n    \n\n  \n  \n  \n\n  \n  \n\n\n  render() {\n    return (\n      <Provider store={store}>\n    <div> \n      <ToolBar/>\n      <SideBar/>\n      <Featuremodal />\n      <Main />\n    </div>  \n    </Provider>  \n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}